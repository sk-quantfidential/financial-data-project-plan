# project-config/epics.yml

epics:
  - id: epic-FDP-0001
    title: Create Initial charting-api-gw in Rust (Local Storage + Pre-Generated Data)
    goal: Build a Rust-based REST API gateway that serves static financial data from local storage.
    repos: [financial-data-charting-api-gw-rust, financial-data-protobuf-schemas]
    labels: [epic, backend]

  - id: epic-FDP-0002
    title: Create Initial charting-app in JS to Render Available Data
    goal: Build a Next.js frontend that fetches and visualizes financial data from the API gateway.
    repos: [financial-data-charting-app-js]
    labels: [epic, frontend]

  - id: epic-FDP-0003
    title: Create Persistent TimescaleDB Service for charting-api-gw
    goal: Integrate TimescaleDB (PostgreSQL extension) and data ingestion capabilities for time-series data persistence in the Rust API.
    repos: [financial-data-charting-api-gw-rust, financial-data-postgres-timescaledb]
    labels: [epic, backend, infra]

  - id: epic-FDP-0004
    title: Create Data Uploader for US Federal SOFR Data
    goal: Build a Rust service to fetch, parse, and upload SOFR data into TimescaleDB.
    repos: [financial-data-charting-api-gw-rust]
    labels: [epic, backend, data-ingestion]

  - id: epic-FDP-0005
    title: Implement Observability Backbone with Prometheus
    goal: Add metrics collection to all services using Prometheus.
    repos: [financial-data-charting-api-gw-rust]
    labels: [epic, observability]

  - id: epic-FDP-0006
    title: Implement Grafana Observability Front-End
    goal: Visualize system metrics using Grafana dashboards.
    repos: [financial-data-charting-app-js]
    labels: [epic, observability, frontend]

  - id: epic-FDP-0007
    title: Perform Info-Sec Security Audit of Initial Code
    goal: Ensure secure coding practices and identify vulnerabilities.
    repos: [financial-data-charting-api-gw-rust, financial-data-charting-app-js]
    labels: [epic, security]